{# Views/Events/edit.twig #}
{% extends "base.twig" %}

{% block title %}Edit Event{% endblock %}

{% block content %}
    <div class="min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
        <div class="max-w-3xl mx-auto">
            {# Form Header #}
            <div class="text-center mb-8">
                <h2 class="text-3xl font-extrabold text-gray-900 mb-2">Edit Event</h2>
                <p class="text-gray-600">Update the details of your event</p>
            </div>

            {# Main Form #}
            <form id="editEvent" action="/event/update/{{ event.getId() }}" method="POST" enctype="multipart/form-data" class="bg-white shadow-lg rounded-xl p-8 space-y-6">
                {# Title Section #}
                <div>
                    <label class="block text-sm font-medium text-gray-900 mb-2" for="title">
                        Event Title
                    </label>
                    <input type="text" id="title" name="title" required
                           class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900 placeholder-gray-400"
                           placeholder="Give your event a catchy title"
                           value="{{ event.getTitle() }}">
                </div>

                {# Description Section #}
                <div>
                    <label class="block text-sm font-medium text-gray-900 mb-2" for="description">
                        Event Description
                    </label>
                    <textarea id="description" name="description" rows="4" required
                              class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900 placeholder-gray-400"
                              placeholder="Describe your event...">{{ event.getDescription() }}</textarea>
                </div>

                {# Date and Time Section #}
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-900 mb-2" for="start_date">
                            Start Date & Time
                        </label>
                        <input type="datetime-local" id="start_date" name="start_date" required
                               class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900"
                               value="{{ event.getStartDate()|date('Y-m-d\\TH:i') }}">
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-900 mb-2" for="end_date">
                            End Date & Time
                        </label>
                        <input type="datetime-local" id="end_date" name="end_date" required
                               class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900"
                               value="{{ event.getEndDate()|date('Y-m-d\\TH:i') }}">
                    </div>
                </div>

                {# Location Section #}
                <div>
                    <label class="block text-sm font-medium text-gray-900 mb-2" for="location">
                        Event Location
                    </label>
                    <input type="text" id="location" name="location" required
                           class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900 placeholder-gray-400"
                           placeholder="Where will your event take place?"
                           value="{{ event.getLocation() }}">
                </div>

                {# Price and Capacity Section #}
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-900 mb-2" for="price">
                            Ticket Price
                        </label>
                        <div class="relative">
                            <span class="absolute left-3 top-9 transform -translate-y-1/2 text-gray-500">$</span>
                            <input type="number" id="price" name="price" step="0.01" required
                                   class="w-full pl-8 pr-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900"
                                   placeholder="0.00"
                                   value="{{ event.getPrice() }}">
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-900 mb-2" for="max_capacity">
                            Maximum Capacity
                        </label>
                        <input type="number" id="max_capacity" name="max_capacity" required
                               class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900"
                               placeholder="Number of attendees"
                               value="{{ event.getMaxCapacity() }}">
                    </div>
                </div>

                {# Media Upload Section #}
                <div>
                    <label class="block text-sm font-medium text-gray-900 mb-2" for="media">
                        Event Image or Video
                    </label>
                    <div class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-200 border-dashed rounded-lg hover:border-orange-500 transition duration-200">
                        <div class="space-y-1 text-center">
                            <svg class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48">
                                <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            <div class="flex text-sm text-gray-600">
                                <label for="media" class="relative cursor-pointer rounded-md font-medium text-orange-500 hover:text-orange-400">
                                    <span>Upload a file</span>
                                    <input id="media" name="media" type="file" accept="image/*,video/*" class="sr-only">
                                </label>
                            </div>
                            <p class="text-xs text-gray-500">PNG, JPG, GIF up to 10MB</p>
                        </div>
                    </div>
                </div>

                {# Category and Tags Section #}
                <div class="grid grid-cols-1 md:grid-cols-1 gap-6">
                    <div>
                        <label class="block text-sm font-medium text-gray-900 mb-2" for="category_id">
                            Event Category
                        </label>
                        <select id="category_id" name="category_id" required
                                class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900">
                            {% if categories is defined %}
                                {% for category in categories %}
                                    <option value="{{ category.getId() }}" {{ category.getId() == event.getCategoryId() ? 'selected' : '' }}>
                                        {{ category.getName() }}
                                    </option>
                                {% endfor %}
                            {% endif %}
                        </select>
                    </div>

                    <div>
                        <label class="block text-sm font-medium text-gray-900 mb-2" for="tags">
                            Event Tags (Max 3)
                        </label>
                        <select id="tags" name="tags[]" required multiple
                                class="w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-orange-500 focus:border-transparent transition duration-200 text-gray-900">
                            {% if tags is defined %}
                                {% for tag in tags %}
                                    <option value="{{ tag.getId() }}" {{ tag.getId() in event.getTagIds() ? 'selected' : '' }}>
                                        {{ tag.getName() }}
                                    </option>
                                {% endfor %}
                            {% endif %}
                        </select>
                    </div>
                </div>

                <input type="hidden" name="organizer_id" value="{{ event.getOrganizerId() }}">

                {# Submit Button #}
                <div class="pt-6">
                    <button type="submit"
                            class="w-full bg-orange-500 text-white px-6 py-3 rounded-lg font-medium hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 transition duration-200">
                        Update Event
                    </button>
                </div>
            </form>
        </div>
    </div>
{% endblock %}

{% block scripts %}
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const form = document.querySelector("#editEvent");

            const inputs = form.querySelectorAll('input, textarea, select');

            const stringFields = ['title', 'description', 'location'];
            const numberFields = ['price', 'max_capacity'];
            const dateFields = ['start_date', 'end_date'];

            let isValid = true;

            const validateField = (input) => {
                let errorMessage = '';
                if (stringFields.includes(input.name)) {
                    if (input.value.trim().length < 8) {
                        errorMessage = 'This field must be at least 8 characters long.';
                    }
                } else if (numberFields.includes(input.name)) {
                    if (input.value <= 0) {
                        errorMessage = 'This field must be a positive number.';
                    }
                } else if (dateFields.includes(input.name)) {
                    if (new Date(input.value) < new Date()) {
                        errorMessage = 'The date must be in the future.';
                    }
                } else if (input.id === "tags") {
                    if (input.selectedOptions.length > 3) {
                        errorMessage = 'You can only select max 3 tags.';
                    }
                }
                input.nextElementSibling.textContent = errorMessage;
                return errorMessage === '';
            };

            inputs.forEach(input => {
                const errorElement = document.createElement('p');
                errorElement.classList.add('text-red-500', 'mt-2', 'text-sm');
                input.insertAdjacentElement('afterend', errorElement);

                input.addEventListener('input', () => {
                    isValid = validateField(input);
                });
            });

            form.addEventListener('submit', (e) => {
                isValid = true;
                inputs.forEach(input => {
                    if (!validateField(input)) {
                        isValid = false;
                    }
                });
                if (!isValid) {
                    e.preventDefault();
                }
            });
        });
    </script>
{% endblock %}